version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.5.9-node-browsers
      environment:
        - BUNDLER_VERSION: 2.0.2
        - RAILS_ENV: 'test'
    - image: circleci/mysql:5.7
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        - MYSQL_ROOT_HOST: '127.0.0.1'

    working_directory: ~/portfolio  #自身のアプリディレクトリ名を設定


    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-

    - run:
        name: install dependencies
        command: |
          gem install bundler -v 2.0.2
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    # Database setup
    - run: mv ./config/database.yml.ci ./config/database.yml

    # Database setup
    - run:
        name: Databasesetup
        command: |
           bundle exec rake db:create
           bundle exec rake db:schema:load

    # run tests!
    - run:
        name: Run rspec
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
            circleci tests split --split-by=timings)"

          bundle exec rspec \
            --format progress \
            --out /tmp/test-results/rspec.xml \
            --format progress \
            $TEST_FILES


    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results
    # (参考)　capybaraスクリーンショットを「ARTIFACTS」に表示
    - store_artifacts:
        path: /tmp/screenshots
        destination: test-screenshots

  heroku_deploy:
      working_directory: ~/portfolio
      docker:
        - image: sue445/heroku-cli
      steps:
        - checkout
        - build-tools/install-ci-tools
        - jq/install
        - run:
            name: Identify who I am
            command: echo 'export MY_EMAIL=`heroku auth:whoami | tail -n 1`' >> $BASH_ENV
        - run:
            name: Identify Heroku app names to destroy
            command: echo 'export APP_NAMES_TO_REMOVE=`heroku apps --json | jq -r "map(select(.owner.email == "\"$MY_EMAIL\"" and (.name | contains(\"potepanec\")))) | sort_by(.updated_at) | reverse | .[5:] | .[].name"`' >> $BASH_ENV
        - run:
            name: Delete old apps if needed
            command: for app_name in $APP_NAMES_TO_REMOVE; do heroku apps:destroy -a $app_name -c $app_name; done
        - run:
            name: Define Heroku app name to create
            command: timestamp=`date +%Y%m%d%H%M%S` && echo "export HEROKU_APP_NAME=potepanec-$timestamp" >> $BASH_ENV
        - run:
            name: Create fresh Heroku app
            command: heroku apps:create $HEROKU_APP_NAME --addons=jawsdb:kitefin
        - run:
            name: Deploy
            command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:master
        - run:
            name: Run post-deploy tasks
            command: |
              heroku config:set AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_REGION=$AWS_REGION AWS_BUCKET=$AWS_BUCKET
              heroku run bin/rails db:migrate
              heroku run bin/rails runner "['products', 'taxons', 'option_values', 'product_option_types', 'product_properties', 'variants', 'assets'].each { |table| Spree::Sample.load_sample(table) }"
              heroku run bin/rails runner db/seeds/potepan_suggest.rb

  orbs:
    build-tools: circleci/build-tools@2.6.3
    jq: circleci/jq@1.9.1
  workflows:
    version: 2.1
    build:
      jobs:
        - rspec
        - rubocop
        - heroku_deploy:
            requires:
              - rspec
              - rubocop
